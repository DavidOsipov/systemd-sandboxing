[Service]
##############
# Networking #
##############

# PrivateNetwork= service needs access to system network
# RestrictAddressFamilies= service needs access to all families
# IPAccounting= that would be a lot of packets :)
# IPAddressAllow= service needs access to all IP addresses
# IPAddressDeny= service needs access to all IP addresses

###############
# File system #
###############
#  Note that the effect of these settings may be undone by privileged processes. In order to
#  set up an effective sandboxed environment for a unit it is thus recommended to combine
#  these settings with either CapabilityBoundingSet=~CAP_SYS_ADMIN or
#  SystemCallFilter=~@mount.

# ProtectHome=yes already specified in packaged unit file
# ProtectSystem=strict already specified in packaged unit file
# ReadWritePaths= service does not need specific path access
# PrivateTmp=yes already specified in packaged unit file

###################
# User separation #
###################

# PrivateUsers= service runs as root
# DynamicUser= service runs as root

###########
# Devices #
###########

# PrivateDevices= service needs access to hardware devices
# DeviceAllow=/dev/rfkill rw already specified in packaged unit file

##########
# Kernel #
##########

ProtectKernelTunables=yes
# ProtectKernelModules=yes already specified in packaged unit file
ProtectKernelLogs=yes

########
# Misc #
########

# CapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_RAW already specified in packaged unit file
# AmbientCapabilities= service runs as root
# NoNewPrivileges=yes already specified in packaged unit file
ProtectHostname=yes
ProtectClock=yes
# ProtectControlGroups=yes already specified in packaged unit file
RestrictNamespaces=yes
LockPersonality=yes
MemoryDenyWriteExecute=yes
RestrictRealtime=yes
RestrictSUIDSGID=yes
# RemoveIPC= service runs as root

################
# System calls #
################
SystemCallFilter=@system-service
SystemCallFilter=~@resources @privileged
SystemCallArchitectures=native
